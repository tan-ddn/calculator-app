{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/easyread.pipe.ts","webpack:///./src/app/logic.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1.display-4 {\\r\\n    font-size: 2rem;\\r\\n}\\r\\n\\r\\n.calc-wrapper {\\r\\n    max-width: 360px;\\r\\n    margin: auto;\\r\\n    border: 1px solid #eee;\\r\\n    background: #f9f9f9;\\r\\n}\\r\\n\\r\\n.calc-screen {\\r\\n    border: 1px solid #eee;\\r\\n}\\r\\n\\r\\n.calc-screen .calc-log {\\r\\n    text-align: right;\\r\\n    height: 2rem;\\r\\n    padding: .3rem .8rem;\\r\\n    background: #fff;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.calc-screen .calc-screen-input {\\r\\n    font-size: 2rem;\\r\\n    padding: .3rem .8rem;\\r\\n}\\r\\n\\r\\n/*.calc-screen .calc-screen-input .calc-key-input {\\r\\n    visibility: hidden;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    font-size: 1rem;\\r\\n}*/\\r\\n\\r\\n.calc-screen input {\\r\\n    outline: 0;\\r\\n    box-shadow: none;\\r\\n}\\r\\n\\r\\n.calc-screen input[type=number]::-webkit-inner-spin-button, \\r\\n.calc-screen input[type=number]::-webkit-outer-spin-button { \\r\\n  -webkit-appearance: none; \\r\\n  appearance: none;\\r\\n  margin: 0; \\r\\n}\\r\\n\\r\\n.btn-toolbar .btn {\\r\\n    font-size: 17px;\\r\\n    font-size: 1.6rem;\\r\\n    padding: .8rem .8rem;\\r\\n    border-radius: .3rem;\\r\\n}\\r\\n\\r\\n.calc-operation-group .btn {\\r\\n    flex-grow: 1;\\r\\n    width: calc(25% - 4px);\\r\\n    margin: 2px;\\r\\n}\\r\\n\\r\\n.calc-numbers-group .btn {\\r\\n    flex-grow: 1;\\r\\n    width: calc(33.333% - 4px);\\r\\n    margin: 2px;\\r\\n}\"","module.exports = \"<div class=\\\"app-root-wrap\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <br/>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <h1 class=\\\"display-4 text-center\\\">Welcome to<br/>{{ title }}!</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--br/>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <input type=\\\"number\\\" [(ngModel)]=\\\"num1\\\" placeholder=\\\"Enter Number 1\\\" class=\\\"form-control\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <input type=\\\"number\\\" [(ngModel)]=\\\"num2\\\" placeholder=\\\"Enter Number 2\\\" class=\\\"form-control\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)='add()'>Add</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)='substract()'>Substract</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)='multiply()'>Multiply</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)='divide()'>Divide</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5 col-md-offset-4\\\">\\r\\n          <h2>Result = {{ result }}</h2>\\r\\n        </div>\\r\\n      </div-->\\r\\n      <div class=\\\"row my-3 justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-7 col-sm-12\\\">\\r\\n          <div class=\\\"calc-wrapper shadow p-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\"><div id=\\\"calc-screen\\\" class=\\\"form-group calc-screen \\\">\\r\\n                <div class=\\\"calc-log\\\">\\r\\n                  <small>{{log}}</small>\\r\\n                </div>\\r\\n                <!--input type=\\\"text\\\" [(ngModel)]='currentDisplayNum' class=\\\"calc-screen-input form-control text-right border-0\\\"/-->\\r\\n                <div class=\\\"calc-screen-input form-control text-right border-0\\\">\\r\\n                  <div>{{currentDisplayNum | easyRead}}</div>\\r\\n                  <!--input type=\\\"text\\\" (keydown)=\\\"onKey($event)\\\" class=\\\"calc-key-input form-control text-right border-0\\\" /-->\\r\\n                </div>\\r\\n              </div></div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\">\\r\\n                  <div class=\\\"btn-group calc-operation-group flex-wrap flex-grow-1 text-center\\\" role=\\\"group\\\">\\r\\n                    <button (click)='toggleSign()' class=\\\"btn btn-primary btn-lg \\\"><small>+/-</small></button>\\r\\n                    <button (click)='clearInput()' class=\\\"btn btn-warning btn-lg\\\">C</button>\\r\\n                    <button (click)='allClear()' class=\\\"btn btn-danger btn-lg \\\">AC</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"btn-group calc-operation-group flex-wrap flex-grow-1 text-center\\\" role=\\\"group\\\">\\r\\n                    <button (click)='doOperation($event)' class=\\\"btn btn-info btn-lg \\\" value=\\\"+\\\">+</button>\\r\\n                    <button (click)='doOperation($event)' class=\\\"btn btn-info btn-lg\\\" value=\\\"-\\\">-</button>\\r\\n                    <button (click)='doOperation($event)' class=\\\"btn btn-info btn-lg\\\" value=\\\"*\\\">X</button>\\r\\n                    <button (click)='doOperation($event)' class=\\\"btn btn-info btn-lg \\\" value=\\\"/\\\">/</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"btn-group calc-numbers-group flex-wrap flex-row-reverse text-center\\\" role=\\\"group\\\">\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg \\\" value=\\\"9\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"8\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"7\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"6\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"5\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"4\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"3\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg\\\" value=\\\"2\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg \\\" value=\\\"1\\\" />\\r\\n                  </div>\\r\\n                  <div class=\\\"btn-group calc-numbers-group flex-wrap flex-grow-1 text-center\\\" role=\\\"group\\\">\\r\\n                    <input type=\\\"button\\\" (click)='getInput($event)' class=\\\"btn btn-secondary btn-lg \\\" value=\\\"0\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='insertDot()' class=\\\"btn btn-secondary btn-lg\\\" value=\\\".\\\" />\\r\\n                    <input type=\\\"button\\\" (click)='getResult()' class=\\\"btn btn-info btn-lg \\\" value=\\\"=\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, AfterViewInit, ElementRef, HostListener } from '@angular/core';\r\nimport { LogicService } from './logic.service';\r\nimport { EasyReadPipe } from './easyread.pipe';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  title = 'Calculator App';\r\n\r\n  readonly operators: string[] = ['+', '-', '*', '/', '='];\r\n  currentDisplayNum: string = '0';\r\n  lastInput: string = '';\r\n  log: string = '';\r\n\r\n  keyIn: any;\r\n\r\n  constructor (private elementRef: ElementRef, private logicService: LogicService) {  }\r\n\r\n  ngAfterViewInit() {\r\n    //this.elementRef.nativeElement.ownerDocument.body.style.fontSize = '17px';\r\n    //this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = '#eee';\r\n  }\r\n\r\n  //Listen to keyboard event\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    //console.log(event);\r\n    this.keyIn = event.key; \r\n    if (isNaN(this.keyIn) || this.keyIn === ' ') {\r\n      switch (this.keyIn) {\r\n        case '+':\r\n        case '-':\r\n        case '*':\r\n        case '/':\r\n          this.doOperation(event);\r\n          break;\r\n        case ' ':\r\n        case '=':\r\n        case 'Enter':\r\n          this.getResult();\r\n          break;\r\n        case '.':\r\n          this.insertDot();\r\n          break;\r\n        case 'Backspace':\r\n          this.clearInput();\r\n          break;\r\n        case 'Escape':\r\n          this.allClear();\r\n          break;\r\n      }\r\n    } else {\r\n      this.getInput(event);\r\n    }\r\n  }\r\n\r\n  //Return correct event's value\r\n  getEventValue(event: any): string {\r\n    let eventValue: string;\r\n    if (event instanceof KeyboardEvent) {\r\n      eventValue = event.key;\r\n    } else {\r\n      eventValue = event.target.value;\r\n    }\r\n    return (eventValue === 'Enter') ? '=' : eventValue;\r\n  }\r\n\r\n  //Clear all when user clicks AC\r\n  allClear() {\r\n    this.logicService.allClear();\r\n    \r\n    this.currentDisplayNum = '0';\r\n    this.log = '';\r\n    this.lastInput = '';\r\n  }\r\n\r\n  //Insert dot for float number\r\n  insertDot() {\r\n    if (this.isLastInputOperator()) {\r\n      this.currentDisplayNum = '0.';\r\n      this.lastInput = '.';\r\n    }\r\n    if (this.currentDisplayNum.indexOf('.') === -1) {\r\n      this.currentDisplayNum += '.';\r\n      this.lastInput = '.';\r\n    }\r\n  }\r\n\r\n  //Update logic service's currentNum and reformat currentDisplayNum\r\n  updateCurrentNum() {\r\n    this.logicService.setCurrentNum(this.currentDisplayNum);\r\n  }\r\n\r\n  //Get number input\r\n  getInput(event: any) {\r\n    let eventValue: string = this.getEventValue(event);\r\n    let numberDigits: string = this.currentDisplayNum.replace('-', '').replace('.', '');\r\n    \r\n    if (this.isLastInputOperator() || this.lastInput === '' || this.currentDisplayNum === '0') {\r\n      this.currentDisplayNum = eventValue;\r\n      this.lastInput = eventValue;\r\n    } else if (numberDigits.length < 12) {\r\n      this.currentDisplayNum += eventValue;\r\n      this.lastInput = eventValue;\r\n    }\r\n    \r\n    this.updateCurrentNum();\r\n  }\r\n\r\n  //Clear last number input\r\n  clearInput() {\r\n    if (!this.isLastInputOperator() && this.lastInput !== 'T') {\r\n      this.currentDisplayNum = (this.currentDisplayNum.length > 1) ? this.currentDisplayNum.slice(0, -1) : '0';\r\n      this.lastInput = 'C';\r\n\r\n      this.updateCurrentNum();\r\n    }\r\n  }\r\n\r\n  //Toggle positive/negative number\r\n  toggleSign() {\r\n    let number: number = Number.parseFloat(this.currentDisplayNum);\r\n    if (number > 0) {\r\n      this.currentDisplayNum = '-' + this.currentDisplayNum;\r\n    } else {\r\n      this.currentDisplayNum = this.currentDisplayNum.replace('-', '');\r\n    }\r\n    this.lastInput = 'T';\r\n  }\r\n\r\n  //Do + - * /\r\n  doOperation(event: any) {\r\n    let eventValue: string = this.getEventValue(event);\r\n\r\n    this.logOperationBegin();\r\n    this.currentDisplayNum = this.logicService.calculate(this.isLastInputOperator()).toString();\r\n    this.lastInput = this.logicService.finishOperation(eventValue);\r\n    this.logOperationEnd();\r\n  }\r\n\r\n  //Do =\r\n  getResult() {\r\n    this.currentDisplayNum = this.logicService.calculate(this.isLastInputOperator()).toString();\r\n    this.lastInput = this.logicService.finishAll();\r\n    this.log = '';\r\n  }\r\n\r\n  //Check if last input is one of + - * / =\r\n  isLastInputOperator(): boolean {\r\n    return this.operators.includes(this.lastInput);\r\n  }\r\n\r\n  //Begin the log on top of calculator\r\n  logOperationBegin() {\r\n    if (!this.isLastInputOperator() || this.lastInput === '=') {\r\n      let number: number = Number.parseFloat(this.currentDisplayNum);\r\n      let easyReadPipeFilter = new EasyReadPipe();\r\n      let numberEasyRead: string = easyReadPipeFilter.transform(this.currentDisplayNum);\r\n      this.log += (number >= 0) ? numberEasyRead + ' ' : '('+numberEasyRead+')' + ' ';\r\n    } else {\r\n      this.log = this.log.slice(0, -2);\r\n    }\r\n  }\r\n\r\n  //End the log\r\n  logOperationEnd() {\r\n    this.log += this.lastInput + ' ';\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EasyReadPipe } from './easyread.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EasyReadPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Pipe, PipeTransform} from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'easyRead'\r\n})\r\nexport class EasyReadPipe implements PipeTransform {\r\n    transform(numberString: string) {\r\n        let dotPos: number = numberString.indexOf('.');\r\n        let number: number = Number.parseFloat(numberString);\r\n        if (Math.abs(number) >= 1e+12 || (Math.abs(number) < 1e-11 && number !== 0)) {\r\n            return number.toExponential(9);\r\n        } else if (Math.abs(number) < 1e-6 && number !== 0 && numberString.indexOf('e-') !== -1) {\r\n            let exp: string = (numberString.split('e-')[1]) ? numberString.split('e-')[1] : '';\r\n            let fracDigits: number = Number.parseInt(exp);\r\n            /*console.log(numberString);\r\n            console.log(fracDigits);*/\r\n            return number.toLocaleString(undefined, {\r\n                minimumFractionDigits: fracDigits\r\n            });\r\n        } else if (dotPos === -1) {\r\n            return number.toLocaleString();\r\n        } else {\r\n            let fractionalPart: string = numberString.slice(dotPos + 1);\r\n            let fracDigits: number = (fractionalPart.length < 11) ? fractionalPart.length : 11;\r\n            let dot: string = (fracDigits === 0) ? '.' : '';\r\n            return number.toLocaleString(undefined, {\r\n                minimumFractionDigits: fracDigits\r\n            }) + dot;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { NUMBER_FORMAT_REGEXP } from '@angular/common/src/i18n/format_number';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogicService {\r\n\r\n  currentNum: number = 0;\r\n  operation: string = '';\r\n  result: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  allClear() {\r\n    this.currentNum = 0;\r\n    this.operation = '';\r\n    this.result = 0;\r\n  }\r\n\r\n  setCurrentNum(val: string) {\r\n    this.currentNum = Number.parseFloat(val);\r\n  }\r\n\r\n  getCurrentNum(): number {\r\n    return this.currentNum;\r\n  }\r\n\r\n  /*toggleSign(val: string): number {\r\n    this.currentNum = Number.parseFloat(val);\r\n    if (this.currentNum !== 0) {\r\n      this.currentNum *= -1;\r\n    }\r\n    return this.currentNum;\r\n  }*/\r\n\r\n  calculate(isLastInputOperator: boolean): number {\r\n    if (!isLastInputOperator) {\r\n      let a: number = this.result;\r\n      let b: number = this.currentNum;\r\n      switch (this.operation) {\r\n        case '+':\r\n          this.result = a + b;\r\n          break;\r\n        case '-':\r\n          this.result = a - b;\r\n          break;\r\n        case '*':\r\n          this.result = a * b;\r\n          break;\r\n        case '/':\r\n          this.result = a / b;\r\n          break;\r\n        default:\r\n          this.result = this.currentNum;\r\n      }\r\n      //console.log(this.operation + ' ' + this.currentNum);\r\n      this.currentNum = 0;\r\n      //console.log(this.result.toString() + ' | ' + this.result);\r\n    }\r\n    return this.result;\r\n  }\r\n\r\n  finishOperation(val: string): string {\r\n    this.operation = val;\r\n    return this.operation;\r\n  }\r\n\r\n  finishAll(): string {\r\n    this.operation = '';\r\n    return '=';\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}